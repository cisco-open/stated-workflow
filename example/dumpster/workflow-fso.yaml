# producer will be sending data function output to the "type" topic
# curl -i
#   -X 'GET'
#   -H 'Accept: application/json'
#   -H 'Layer-Id: 55f8da9d-93de-4bf2-b818-c2c2ac1d3f8d'
#   -H 'Layer-Type: TENANT' $APPD_JSON_STORE_URL/v1/objects/extensibility:solution/agent
#   -H'appd-pty: IlVTRVIi'
#   -H'appd-pid: ImZvb0BiYXIuY29tIg=='
knowledgeStore:
  type: "my-topic"
  data: "${ function(){  {'msg': 'hello', 'rando': $random()} } }"
  client:
    type: test
# producer will be invoking "to" function for each consumed event
subscribeParams: #parameters for subscribing to a cloud event
  source: cloudEvent
  type: /${ produceParams.type } # subscribe to the same topic as we are publishing to test events
  to: /${ function($e){(
    $set('/rxLog', rxLog~>$append($e));
    )}  }
  subscriberId: dingus
  initialPosition: latest
  client:
      type: test
# starts producer function
send: "${ $setInterval( function(){ $publish(produceParams)}, 50) }"
# starts consumer function
recv$: $subscribe(subscribeParams)
# rxLog is a field of the template where the consumer function will be storing results of event processing
rxLog: [ ]
# this is a condition that will stop the workflow when rxLog has 5 elements
stop$: ($count(rxLog)=10?($clearInterval(send);'done'):'still going')
